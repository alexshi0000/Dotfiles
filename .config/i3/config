# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# this is a chain of tools that need root priviledges, 
# just run gksu from beginning

# exec ./gksuscripts.sh move this to rclocal, or simply don't use, not sure

# i want my color temperature to be slightly on the cool side, thats just how i read things
exec redshift -x

exec nm-applet

# pavu
# exec pavucontrol
  exec --no-startup-id i3-msg 'exec /usr/bin/pulseaudio --start'

# lets setup the polybar

bindsym $mod+p exec ~/.config/polybar/launch.sh
bindsym $mod+Shift+p exec pkill polybar

# lets make sure the power management on my network card is shut off for good
# exec ./wallpaper.sh && gksu iwconfig wlp3s0 power off

# turn off the goddam bluetooth thats using fucking batts like hells mans
exec rfkill block bluetooth

# lets go conky!!!!!!!!!!!!!!!
exec conky -q -c /home/lx_user/.minimalrc
exec conky -q -c /home/lx_user/.clockrc

# trackpoint settings (doesn't work here, moved to .rclocal)
# exec echo 195 | sudo tee /sys/devices/platform/i8042/serio1/serio2/sensitivity
# exec echo 100 | sudo tee /sys/devices/platform/i8042/serio1/serio2/speed
exec xinput --set-prop "12" "Device Accel Constant Deceleration" 0.5

# set a system binding for poweroff
bindsym $mod+Shift+s exec shutdown now

# sound and multimedia keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec pactl set-sink-mute 0 toggle # mute sound

# TOUCHPAD CONTROL
# bindsym XF86TouchpadToggle exec toggletouchpad.sh

# scrot?
# scrot & gimp - root
bindsym Print exec scrot -e 'mv $f ~/Pictures/screenshots/ #&& gimp ~/Pictures/screenshots/$f'
# scrot & gimp - select window or rectangle
bindsym Mod1+Print exec scrot -s -e 'mv $f ~/Pictures/screenshots/ #&& gimp ~/Pictures/screenshots/$f' 

#turn off the trackpad
#exec xinput set-prop 11 "Device Enabled" 0

#POLYBAR!!!!!!!!!!!!!!!
#exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# i3lock
bindsym $mod+l exec ./i3lock-color/lock.sh

#FUCK YOU
bindsym $mod+u exec mpg123 FUCK\ YOU!\ Sound\ Effect.mp3

#nice keyboard
exec ./keyboard.sh

#gaps
# Disable window titlebars entirely
for_window [class="^.*"] border pixel 0

# Set inner/outer gaps
gaps inner 8
gaps outer 5

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 5
# gaps outer all plus 10

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
 smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#end gaps

#naut
exec gsettings set org.gnome.desktop.background show-desktop-icons false
#get rid of hideous border
for_window [class="^.*"] border pixel 0

#keyboard repeat
#exec  xset r rate 200 50 

#mutli_touch
exec ./enable_multi_touch.sh
# I set natural scrolling here
exec --no-startup-id synclient HorizEdgeScroll=1 VertEdgeScroll=1 VertScrollDelta=-111

#font
font pango: System San Francisco Display Regular 8.25

#compton
exec compton

# WALLPAPEPRPEREPRPERE                                                               wallpaper
# exec ./wallpaper.sh
  exec ./.config/dynamic_wallpaper.sh
# exec python3 dynamic_wallpaper.py

#audio
# Pulse Audio controls

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+t exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run -p "command:" -nb "#0a0c21" -nf "#7f8c8d" -sb "#0a0c21" -sf "#bdc3c7"
  bindsym $mod+d exec rofi -show run -config ~/.config/roficonf

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
# bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec i3-msg exit
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 2 px or 2 ppt
        bindsym k resize grow height 2 px or 2 ppt
        bindsym l resize shrink height 2 px or 2 ppt
        bindsym semicolon resize grow width 2 px or 2 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 2 px or 2 ppt
        bindsym Down resize grow height 2 px or 2 ppt
        bindsym Up resize shrink height 2 px or 2 ppt
        bindsym Right resize grow width 2 px or 2 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#       status_command i3status
#       position top
#}

# lock start
exec .config/i3lock_script.sh

# bucklespring sounds
bindsym $mod+b exec ~/buckle.sh
bindsym $mod+Shift+b exec pkill buckle
